

name: Deploy to staging


on: 
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
  
env:
  IMAGE_REGISTRY_URL: ghcr.io
  DOCKER_IMAGE_NAME: cyrus_docker_image_name
  AZURE_WEBAPP_NAME: cyrus_azure_webapp_name


jobs:  
  build:  
    if: contains(github.event.pull_request.labels.*.name, 'stage')    
    runs-on: ubuntu-latest   
    steps:      
      - uses: actions/checkout@v3
      - name: npm install and build webpack
        run: |
          npm install
          npm run build
      - uses: actions/upload-artifact@main
        with:
          name: cyrus webpack artifacts
          path: public/
          
  build-docker-image:
    runs-on: ubuntu-latest
    needs: build
    name: build image and store in github container registry
    steps:
      - uses: actions/checkout@v3
      - name: Download built artifact
        uses: actions/download-artifact@main
        with:
          name: cyrus webpack artifacts
          path: public
          
      - name: login to ghcr
        uses: docker/login-action@1.14.1
        with:
          registry: ${{ env.IMAGE_REGISTRY_URL }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
          
          
      - name: extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v3.7.0
        with:
          images: ${{ env.IMAGE_REGISTRY_URL }}/${{ github.repository }}/${{ env.DOCKER_IMAGE_NAME }}
          tags: |
            type=sha,format=long,prefix=
            
      - name: build and push docker image
        uses: docker/build-push-action@v2.10.0
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          
  deploy-to-azure:
    runs-on: ubuntu-latest
    needs: build-docker-image
    name: deploy app container to azure
    steps:
      - name: login via azure cli
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
          
      - uses: azure/docker-login@v1
        with: 
          login-server: ${{ env.IMAGE_REGISTRY_URL }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
          
      - name: deploy the webapp container
        uses: azure/webapps-deploy@v2
        with:
          app-name: ${{ env.AZURE_WEBAPP_NAME }}
          images: ${{env.IMAGE_REGISTRY_URL}}/${{ github.repository }}/${{ env.DOCKER_IMAGE_NAME }}:${{ github.sha }}
          
          
      - name: azure logout
        run: |
          az logout
          

